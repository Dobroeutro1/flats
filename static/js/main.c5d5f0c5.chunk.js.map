{"version":3,"sources":["js/Api/utils.ts","js/Api/constants.ts","js/Api/index.ts","js/Api/Api.ts","js/actions/index.ts","js/actions/actionsSidebar.ts","js/reducers/sidebar.ts","js/reducers/index.ts","js/components/sidebar/Sidebar.tsx","js/utils.ts","js/containers.ts","index.tsx"],"names":["fetchApi","rqst","a","response","result","fetch","url","Error","json","ok","console","log","HEADERS","Accept","api","id","this","generateUrl","method","headers","actionsSidebar","GET_CARD","GET_CARD_OK","GET_CARD_ERROR","CHANGE_FILTER_STATE","changeFilterState","filter","type","payload","getCard","dispatch","convert","card","image","liked","getRickAndMorty","initialState","loading","combineReducers","sidebar","state","action","Sidebar","min","max","Math","floor","random","props","className","onClick","changeFilter","htmlFor","addDog","React","PureComponent","SidebarContainer","connect","store","applyMiddleware","getState","next","Function","createStore","reducer","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c5d5f0c5.chunk.js","sourcesContent":["import { APIRequest } from './interfaces'\r\n\r\nexport async function fetchApi<T>(rqst: APIRequest): Promise<T> {\r\n  let response: Response | null = null,\r\n    result: T | Error | null = null\r\n\r\n  try {\r\n    response = await fetch(rqst.url, rqst as RequestInit)\r\n  } catch (exception) {\r\n    throw new Error('Ошибка при выполнении запроса')\r\n  }\r\n\r\n  try {\r\n    result = await response.json()\r\n  } catch (exception) {\r\n    throw new Error('Ошибка получения данных')\r\n  }\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Ошибка при выполнении запроса')\r\n  }\r\n\r\n  console.log('API:', result)\r\n\r\n  return result as T\r\n}\r\n","export const HEADERS = {'Content-Type': 'application/json', Accept: '*/*' }\r\n","import Api from './Api'\r\nexport const api = new Api()\r\n","import { fetchApi } from './utils'\r\nimport { HEADERS } from './constants'\r\nimport { RickAndMortyResponse } from './interfaces'\r\n\r\nexport default class Api {\r\n  generateUrl(id: number): string {\r\n    return `https://rickandmortyapi.com/api/character/${id}`\r\n  }\r\n\r\n  async getRickAndMorty(id: number): Promise<RickAndMortyResponse> {\r\n    const result = await fetchApi<RickAndMortyResponse>({\r\n      url: this.generateUrl(id),\r\n      method: 'GET',\r\n      headers:HEADERS\r\n    })\r\n\r\n    return result\r\n  }\r\n}\r\n","import { Actions as ActionsSidebar } from './actionsSidebar'\r\n\r\nexport const actionsSidebar = new ActionsSidebar()\r\n","import { IAction, IActionAsync } from '../interfaces'\r\nimport { api } from '../Api'\r\nimport { RickAndMortyResponse } from '../Api/interfaces'\r\n\r\nexport class Actions {\r\n  readonly GET_CARD = 'GET_CARD'\r\n  readonly GET_CARD_OK = 'GET_CARD_OK'\r\n  readonly GET_CARD_ERROR = 'GET_CARD_ERROR'\r\n\r\n  readonly CHANGE_FILTER_STATE = 'CHANGE_FILTER_STATE'\r\n\r\n  changeFilterState = (filter: boolean): IAction => ({ type: this.CHANGE_FILTER_STATE, payload: filter })\r\n\r\n  getCard = (id: number): IActionAsync => async (dispatch) => {\r\n    const convert = (card: RickAndMortyResponse): any => ({ image: card.image, liked: false, id: card.id })\r\n    dispatch({ type: this.GET_CARD })\r\n    try {\r\n      dispatch({ type: this.GET_CARD_OK, payload: convert(await api.getRickAndMorty(id)) })\r\n    } catch (error) {\r\n      dispatch({ type: this.GET_CARD_ERROR, payload: error })\r\n    }\r\n  }\r\n}\r\n","import { SidebarStorage } from '../components/sidebar'\r\nimport { IAction } from '../interfaces'\r\nimport { actionsSidebar } from '../actions'\r\n\r\nconst initialState: SidebarStorage = {\r\n  filter: false,\r\n  loading: false\r\n}\r\n\r\nexport function reducer(state = initialState, action: IAction): SidebarStorage {\r\n  switch (action.type) {\r\n    case actionsSidebar.CHANGE_FILTER_STATE:\r\n      return { ...state, filter: action.payload as boolean }\r\n    case actionsSidebar.GET_CARD:\r\n      return { ...state, loading: true }\r\n    case actionsSidebar.GET_CARD_OK:\r\n    case actionsSidebar.GET_CARD_ERROR:\r\n      return { ...state, loading: false }\r\n\r\n    default:\r\n      return { ...state }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { reducer as sidebar } from './sidebar'\r\n\r\nexport default combineReducers({ sidebar })\r\n","import React from 'react'\r\nimport { SidebarProps } from './interfaces'\r\nimport { getRandomId } from '../../utils'\r\nimport { actionsSidebar } from '../../actions'\r\n\r\nexport class Sidebar extends React.PureComponent<SidebarProps, never> {\r\n  addDog(): void {\r\n    const id = getRandomId(1, 671)\r\n    this.props.dispatch(actionsSidebar.getCard(id))\r\n  }\r\n\r\n  changeFilter(): void {\r\n    this.props.dispatch(actionsSidebar.changeFilterState(!this.props.filter))\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar__filter\">\r\n          <h5 className=\"filter__title\">Отфильтровать карточки</h5>\r\n          <input className=\"filter-input\" id=\"checkbox\" type=\"checkbox\" />\r\n          <label onClick={() => this.changeFilter()} className=\"filter-label\" htmlFor=\"checkbox\" />\r\n        </div>\r\n\r\n        <button className=\"sidebar__btn\" onClick={() => this.addDog()}>\r\n          {this.props.loading ? \"Загружаю...\" :'Добавить карточку'}\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Action, Middleware } from 'redux'\r\n\r\nexport const actionFn: Middleware =\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  (action: Action): Action => {\r\n    if (action instanceof Function) {\r\n      return action(dispatch, getState)\r\n    }\r\n\r\n    return next(action)\r\n  }\r\n\r\nexport function getId(message: string): number {\r\n  return parseInt(message.split('.jpg')[0].split('_')[1], 10)\r\n}\r\n\r\nexport function getRandomId(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { Storage } from './interfaces'\r\nimport { Sidebar, SidebarProps } from './components/sidebar'\r\n\r\nexport const SidebarContainer = connect(sidebar)(Sidebar)\r\n\r\nfunction sidebar(state: Storage): SidebarProps {\r\n  return { ...state.sidebar }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reducer from './js/reducers'\r\nimport { actionFn } from './js/utils'\r\nimport * as containers from './js/containers'\r\n\r\nconst store = applyMiddleware(actionFn)(createStore)(reducer)\r\n\r\nif (document.getElementById('sidebar')) {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <containers.SidebarContainer />\r\n    </Provider>,\r\n    document.getElementById('sidebar')\r\n  )\r\n}\r\n"],"sourceRoot":""}